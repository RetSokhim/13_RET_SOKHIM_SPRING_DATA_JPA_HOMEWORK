plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "6.0.1.5171"
    id 'jacoco'


}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { 
        languageVersion = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'com.github.hazendaz.gradle', name: 'gradle', version: '6.7.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "gradle2"
        property "sonar.projectName", "gradle2"
        property "sonar.host.url", "http://sonarqube-202511104738-sonarqube-1:9000"// Replace with your generated token
        property "sonar.login", "sqp_3718835b2bf31c52c01ba7f84724d77cf9e1b997"
    }
/////
    jacoco {
        toolVersion = "0.8.11" // Use a recent version
    }

    jacocoTestReport {
        dependsOn test // Run tests before generating report
        reports {
            xml.required = true
            html.required = true
        }
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
}